# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-04 16:06
from __future__ import unicode_literals

import cookies.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('concepts', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'GR', b'GRANT'), (b'DL', b'DELETE'), (b'CH', b'CHANGE'), (b'VW', b'VIEW')], max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Authorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_instance_id', models.PositiveIntegerField()),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_authorized_to', to=settings.AUTH_USER_MODEL)),
                ('on_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('to_do', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorizations', to='cookies.Action')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=' Names are unique accross ALL entities in the system. ', max_length=255)),
                ('hidden', models.BooleanField(default=False, help_text=' If a resource is hidden it will not appear in search results and will not be accessible directly, even for logged-in users. ')),
                ('public', models.BooleanField(default=True, help_text=' If a resource is not public it will only be accessible to logged-in users and will not appear in public search results. ')),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(help_text=' You may provide your own URI, or allow the system to assign one automatically (recommended). ', max_length=255, verbose_name=b'URI')),
                ('indexable_content', models.TextField(blank=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('content_resource', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, help_text=' Drop a file onto this field, or click "Choose File" to select a file on your computer. ', null=True, upload_to=cookies.models._resource_file_name)),
                ('location', models.URLField(blank=True, max_length=255, null=True, verbose_name=b'URL')),
            ],
            options={
                'abstract': False,
                'permissions': (('view_resource', 'View resource'),),
            },
        ),
        migrations.CreateModel(
            name='ConceptEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=' Names are unique accross ALL entities in the system. ', max_length=255)),
                ('hidden', models.BooleanField(default=False, help_text=' If a resource is hidden it will not appear in search results and will not be accessible directly, even for logged-in users. ')),
                ('public', models.BooleanField(default=True, help_text=' If a resource is not public it will only be accessible to logged-in users and will not appear in public search results. ')),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(help_text=' You may provide your own URI, or allow the system to assign one automatically (recommended). ', max_length=255, verbose_name=b'URI')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concepts.Concept')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'entities',
            },
        ),
        migrations.CreateModel(
            name='ContentRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(blank=True, max_length=100, null=True)),
                ('content_encoding', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DateTimeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.DateTimeField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DateValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.DateField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('on_instance_id', models.PositiveIntegerField()),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
                ('did', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='cookies.Action')),
                ('on_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'URI')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FloatValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.FloatField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IntegerValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(default=0, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=' Names are unique accross ALL entities in the system. ', max_length=255)),
                ('hidden', models.BooleanField(default=False, help_text=' If a resource is hidden it will not appear in search results and will not be accessible directly, even for logged-in users. ')),
                ('public', models.BooleanField(default=True, help_text=' If a resource is not public it will only be accessible to logged-in users and will not appear in public search results. ')),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(help_text=' You may provide your own URI, or allow the system to assign one automatically (recommended). ', max_length=255, verbose_name=b'URI')),
                ('source_instance_id', models.PositiveIntegerField()),
                ('target_instance_id', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'metadata relation',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=' Names are unique accross ALL entities in the system. ', max_length=255)),
                ('hidden', models.BooleanField(default=False, help_text=' If a resource is hidden it will not appear in search results and will not be accessible directly, even for logged-in users. ')),
                ('public', models.BooleanField(default=True, help_text=' If a resource is not public it will only be accessible to logged-in users and will not appear in public search results. ')),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(help_text=' You may provide your own URI, or allow the system to assign one automatically (recommended). ', max_length=255, verbose_name=b'URI')),
                ('indexable_content', models.TextField(blank=True, null=True)),
                ('content_type', models.CharField(blank=True, max_length=255, null=True)),
                ('content_resource', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, help_text=' Drop a file onto this field, or click "Choose File" to select a file on your computer. ', null=True, upload_to=cookies.models._resource_file_name)),
                ('location', models.URLField(blank=True, max_length=255, null=True, verbose_name=b'URL')),
            ],
            options={
                'abstract': False,
                'permissions': (('view_resource', 'View resource'),),
            },
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'URI')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StringValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('namespace', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'URI')),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConceptType',
            fields=[
                ('type_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cookies.Type')),
            ],
            bases=('cookies.type',),
        ),
        migrations.AddField(
            model_name='type',
            name='domain',
            field=models.ManyToManyField(blank=True, help_text=' The domain specifies the resource types to which this Type or Field can apply. If no domain is specified, then this Type or Field can apply to any resource. ', null=True, to='cookies.Type'),
        ),
        migrations.AddField(
            model_name='type',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='cookies.Type'),
        ),
        migrations.AddField(
            model_name='type',
            name='schema',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='types', to='cookies.Schema'),
        ),
        migrations.AddField(
            model_name='resource',
            name='entity_type',
            field=models.ForeignKey(blank=True, help_text=' Specifying a type helps to determine what metadata fields are appropriate for this resource, and can help with searching. Note that type-specific filtering of metadata fields will only take place after this resource has been saved. ', null=True, on_delete=django.db.models.deletion.CASCADE, to='cookies.Type', verbose_name=b'type'),
        ),
        migrations.AddField(
            model_name='relation',
            name='entity_type',
            field=models.ForeignKey(blank=True, help_text=' Specifying a type helps to determine what metadata fields are appropriate for this resource, and can help with searching. Note that type-specific filtering of metadata fields will only take place after this resource has been saved. ', null=True, on_delete=django.db.models.deletion.CASCADE, to='cookies.Type', verbose_name=b'type'),
        ),
        migrations.AddField(
            model_name='relation',
            name='predicate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='cookies.Field', verbose_name=b'field'),
        ),
        migrations.AddField(
            model_name='relation',
            name='source_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_from', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='relation',
            name='target_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_to', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='field',
            name='domain',
            field=models.ManyToManyField(blank=True, help_text=b'The domain specifies the resource types to which this Type or Field can apply. If no domain is specified, then this Type or Field can apply to any resource.', null=True, to='cookies.Type'),
        ),
        migrations.AddField(
            model_name='field',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='cookies.Field'),
        ),
        migrations.AddField(
            model_name='field',
            name='range',
            field=models.ManyToManyField(blank=True, help_text=" The field's range specifies the resource types that are valid values for this field. If no range is specified, then this field will accept any value. ", null=True, related_name='in_range_of', to='cookies.Type'),
        ),
        migrations.AddField(
            model_name='field',
            name='schema',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='cookies.Schema'),
        ),
        migrations.AddField(
            model_name='contentrelation',
            name='content_resource',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent', to='cookies.Resource'),
        ),
        migrations.AddField(
            model_name='contentrelation',
            name='for_resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='cookies.Resource'),
        ),
        migrations.AddField(
            model_name='conceptentity',
            name='entity_type',
            field=models.ForeignKey(blank=True, help_text=' Specifying a type helps to determine what metadata fields are appropriate for this resource, and can help with searching. Note that type-specific filtering of metadata fields will only take place after this resource has been saved. ', null=True, on_delete=django.db.models.deletion.CASCADE, to='cookies.Type', verbose_name=b'type'),
        ),
        migrations.AddField(
            model_name='collection',
            name='entity_type',
            field=models.ForeignKey(blank=True, help_text=' Specifying a type helps to determine what metadata fields are appropriate for this resource, and can help with searching. Note that type-specific filtering of metadata fields will only take place after this resource has been saved. ', null=True, on_delete=django.db.models.deletion.CASCADE, to='cookies.Type', verbose_name=b'type'),
        ),
        migrations.AddField(
            model_name='collection',
            name='resources',
            field=models.ManyToManyField(blank=True, null=True, related_name='part_of', to='cookies.Resource'),
        ),
        migrations.AddField(
            model_name='concepttype',
            name='type_concept',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concepts.Type'),
        ),
    ]
